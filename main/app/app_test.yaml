TODO:
- Add support for user defined logic (example, run_test_for_*) following the example for assertions
- Add logic for testing APIs
- Make timestamps a list and append timestamp at each logical operation
- Add logic for safe loading or regular loading data from yaml files -> configuration safe_load=true
- Add wrapper logic back in for external libraries
- Consolidate duplicate code for sync and async functions -> https://stackoverflow.com/questions/27290656/should-i-use-two-asyncio-event-loops-in-one-program/27298880#27298880


configurations:
  resources:
  - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/assertions/app.py
  - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/app.py


tests:
- function: main
  description: >
    Main module of this application. Returns the results of running tests
  cast_output:
  - method: resources.app.list_sns_to_list_dict
  tests:
  - description: Results from running tests associated with a module
    arguments:
      project_path: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/add.py
      yaml_suffix: _test
      resources:
      - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/assertions/app.py
    assertions:
    - method: assertions.app.check_equals
      expected:
      - expected: TypeError
        id: ' .main.app.resources.add.add - 0.1 - Return the result of adding two integers '
        id_short: .main.app.resources.add.add
        log: null
        method: check_exception
        output: TypeError
        passed: true
      - expected: 3
        id: ' .main.app.resources.add.add - 0.0 - Return the result of adding two integers '
        id_short: .main.app.resources.add.add
        log: null
        method: check_equals
        output: 3
        passed: true
- function: handle_id
  description: Returns the ID of a test
  tests:
  - description: Undefined arguments
    arguments: {}
    assertions:
    - method: assertions.app.check_sns
      expected:
        id: ' None.None - None '
        id_short: None.None
        log: Generated test id for None.None
    - method: assertions.app.check_type
      expected: SimpleNamespace
  - description: Defined arguments
    arguments:
      function: function
      module_route: module_route
      description:
      - description_a
      - description_b
      key: key
    assertions:
    - method: assertions.app.check_sns
      expected:
        id: ' module_route.function - key - description_b '
        id_short: module_route.function
        log: Generated test id for module_route.function
- function: handle_module
  description: Returns the module at a specified location
  tests:
  - description: Undefined arguments
    arguments: {}
    assertions:
    - method: assertions.app.check_sns
      field: log
      expected:
        message: No module at location None
        level: warning
  - description: Module does not exist at location
    arguments:
      module: module_location_does_not_exist
    assertions:
    - method: assertions.app.check_sns
      field: log
      expected:
        message: No module at location module_location_does_not_exist
        level: warning
  - description: Module exists at the location
    arguments:
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/app.py
      module_route: .main.resources.app
    assertions:
    - method: assertions.app.check_module
      field: module
      expected:
        location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/app.py
- function: get_resource_route
  description: >
    Get the route for a resource in a module based on resource and module's
    locations
  tests:
  - description: Undefined arguments
    arguments:
      module: null
      resource: null
    assertions:
    - method: assertions.app.check_equals
      expected: None
  - description: Defined arguments
    arguments:
      module: module.py
      resource: resource.py
    assertions:
    - method: assertions.app.check_equals
      expected: resource
  - description: Resource and module in shared directory
    arguments:
      module: directory/module.py
      resource: directory/resource.py
    assertions:
    - method: assertions.app.check_equals
      expected: resource
  - description: Module in sub directory of resource's directory
    arguments:
      module: directory/sub_directory/module.py
      resource: directory/resource.py
    assertions:
    - method: assertions.app.check_equals
      expected: resource
  - description: Module and resource are in different directories
    arguments:
      module: directory_a/module.py
      resource: directory_b/resource.py
    assertions:
    - method: assertions.app.check_equals
      expected: directory_b.resource
  - description: Resource in sub directory of module's directory
    arguments:
      module: directory/module.py
      resource: directory/sub_directory/resource.py
    assertions:
    - method: assertions.app.check_equals
      expected: sub_directory.resource
- function: handle_resources
  description: Loads resource modules into the module to test
  cast_arguments:
  - method: resources.app.get_module_wrapper
    field: module
  tests:
  - description: Undefined arguments
    arguments: {}
    assertions:
    - method: assertions.app.check_sns
      expected:
        module: null
        _cleanup:
        - resources
  - description: >
      Resources is a list containing the locations of existing python and
      javascript modules, and the location of a non-existing module
    arguments:
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/app.py
      resources:
      - does_not_exist.py
      - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/resource.js
      - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/resource.py
    assertions:
    - method: assertions.app.check_sns
      expected:
        _cleanup:
        - resources
    - method: assertions.app.check_sns
      field: log
      expected:
        level: warning
        standard_output: true
        resources_ignored:
        - does_not_exist.py
        - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/resource.js
    - method: assertions.app.check_module
      field: module
      expected:
        location: ${PWD}/main/app/resources/app.py
    # Verify that the resource was added to the module
    - method: assertions.app.check_module
      field: module.resource
      expected:
        location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/resource.py
- function: handle_casting_arguments
  description: Handles casting arguments used to call test function
  cast_arguments:
  - method: resources.app.get_module_wrapper
    field: module
  tests:
  - description: Undefined arguments
    arguments:
      cast_arguments: null
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/app.py
      arguments: arguments
    assertions:
    - method: assertions.app.check_sns
      expected:
        _cleanup:
        - cast_arguments
        arguments: arguments
  - description: Cast arguments is empty
    arguments:
      cast_arguments: []
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/app.py
      arguments: arguments
    assertions:
    - method: assertions.app.check_sns
      expected:
        _cleanup:
        - cast_arguments
        arguments: arguments
  - description: Cast string arguments as integer
    arguments:
      cast_arguments:
      - method: __builtins__.int
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/app.py
      arguments: '0000'
    assertions:
    - method: assertions.app.check_sns
      expected:
        _cleanup:
        - cast_arguments
        arguments: 0
  - description: Cast specific key/value in dictionary
    arguments:
      cast_arguments:
      - method: __builtins__.int
        field: key
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/app.py
      arguments:
        key: '0000'
    assertions:
    - method: assertions.app.check_sns
      expected:
        _cleanup:
        - cast_arguments
        arguments:
          key: 0
- function: get_function
  description: Returns an existing function to test
  cast_arguments:
  - method: resources.app.get_module_wrapper
    field: module
  tests:
  - description: Undefined arguments
    arguments:
      function: null
      module: ${PWD}/main/app/resources/resource.py
    assertions:
    - method: assertions.app.check_sns
      field: log
      expected:
        message: Could not retrieve None from ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/resource.py
        level: error
    - method: assertions.app.check_exception
      field: log.error
      expected: RuntimeError
  - description: Defined arguments
    arguments:
      function: add
      module: ${PWD}/main/app/resources/app.py
    assertions:
    - method: assertions.app.check_function
      field: function
      expected:
        location: ${PWD}/main/app/resources/app.py
        name: add
- function: get_function_output_pack_arguments
  description: Return result of calling a function with packed arguments
  cast_arguments:
  - field: function
    method: resources.app.get_resource
  tests: &GET_FUNCTION_OUTPUT_PACK_ARGUMENTS_TESTS
  - description: Return output when exception is undefined
    arguments:
      exception: null
      function: callable
      arguments: {}
      output: OUTPUT
    assertions:
    - method: assertions.app.check_sns
      expected:
        output: OUTPUT
  - description: Call function when exception is defined
    arguments:
      exception: exception
      function: add
      arguments:
        a: 1
        b: 1
    assertions:
    - method: assertions.app.check_sns
      expected:
        output: 2
  - description: Function call results in exception
    arguments:
      exception: exception
      function: add
      arguments:
        data:
          a: 1
          b: 1
    assertions:
    - method: assertions.app.check_exception
      field: output
      expected: TypeError
    - method: assertions.app.check_exception
      field: exception
      expected: TypeError
  - description: Function is an awaitable
    arguments:
      exception: exception
      function: subtract
      arguments:
        a: 1
        b: 1
    assertions:
    - method: assertions.app.check_sns
      expected:
        output: 0
    # - method: assertions.app.check_exception
    #   field: output
    #   expected: TypeError
    # - method: assertions.app.check_exception
    #   field: exception
    #   expected: TypeError
- function: get_function_output_unpack_arguments
  description: Calls a function with an unpacked dictionary as arguments
  cast_arguments:
  - method: resources.app.get_resource
    field: function
  tests: &GET_FUNCTION_OUTPUT_UNPACK_ARGUMENTS_TESTS
  - description: Undefined arguments
    arguments: {}
    assertions:
    - method: assertions.app.check_sns
      field: log
      expected:
        level: error
    - method: assertions.app.check_exception
      field: log.error
      expected: TypeError
    - method: assertions.app.check_exception
      field: output
      expected: TypeError
    # - method: assertions.app.check_exception
    #   field: exception
    #   expected: TypeError
  - description: Call function with unpacked dict
    arguments:
      function: multiply
      arguments:
        a: 1
        b: 1
    assertions:
    - method: assertions.app.check_sns
      expected:
        output: 1
  - description: Call function with unpacked list
    arguments:
      function: multiply
      arguments:
      - 1
      - 1
    assertions:
    - method: assertions.app.check_sns
      expected:
        output: 1
  - description: >
      Argument is iterable that does not reconcile with function parameters
    arguments:
      function: multiply
      arguments: [1, 2, 3]
    assertions:
    - method: assertions.app.check_sns
      field: log
      expected:
        level: error
    - method: assertions.app.check_exception
      field: output
      expected: TypeError
- function: get_function_output
  description: Returns the result of running a function with arguments
  cast_arguments:
  - method: resources.app.get_resource
    field: function
  tests:
  - description: Arguments is an empty dictionary
    arguments:
      function: add
      arguments:
        data:
          a: 0
          b: 1
    assertions:
    - method: assertions.app.check_sns
      expected:
        output: 1
  - description: Arguments is an empty dictionary
    arguments:
      function: multiply
      arguments:
        a: 3
        b: 4
    assertions:
    - method: assertions.app.check_sns
      expected:
        output: 12
  - description: Arguments is an empty list
    arguments:
      function: subtract
      arguments:
        data:
          b: 3
          a: 1
    assertions:
    - method: assertions.app.check_sns
      expected:
        output: 2
  - description: Arguments is a dict to unpack
    arguments:
      function: multiply
      arguments:
        a: 2
        b: 2
    assertions:
    - method: assertions.app.check_sns
      expected:
        output: 4
  - description: Arguments is not a dictionary or iterable
    arguments:
      function: multiply
      arguments:
      - 0
      - 1
    assertions:
    - method: assertions.app.check_sns
      expected:
        output: 0
- function: handle_casting_output
  description: Handles casting the output from calling the function to test
  cast_arguments:
  - method: resources.app.get_module_wrapper
    field: module
  tests:
  - description: Undefined arguments
    arguments:
      cast_output: null
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/app.py
      output: null
    assertions:
    - method: assertions.app.check_sns
      expected:
        _cleanup:
        - cast_output
        output: null
  - description: Cast output is an empty list
    arguments:
      cast_output: []
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/app.py
      output: output
    assertions:
    - method: assertions.app.check_sns
      expected:
        _cleanup:
        - cast_output
        output: output
  - description: Cast output as a string
    arguments:
      cast_output:
      - method: __builtins__.str
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/app.py
      output: 1
    assertions:
    - method: assertions.app.check_sns
      expected:
        _cleanup:
        - cast_output
        output: '1'
  - description: Cast specific field in output of type simple name space
    cast_arguments:
    - method: sns
      unpack: true
      field: output
    arguments:
      cast_output:
      - method: __builtins__.int
        field: key
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/app.py
      output:
        key: '0000'
    assertions:
    - method: assertions.app.check_sns
      field: output
      expected:
        key: 0
- function: run_test_for_function
  description: >
    Returns assertions from performing operations needed to process a test for a function
  cast_arguments:
  - method: sns
    field: test
    unpack: true
  cast_output:
  - method: resources.app.list_sns_to_list_dict
  tests:
  - description: Undefined test results in empty list
    arguments: {}
    assertions:
    - method: assertions.app.check_equals
      expected: []
  - description: Defined test returns a list containing assertions
    arguments:
      test:
        project_path: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/add.py
        module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/add.py
        yaml: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/add.yaml
        function: add
        function_name: add
        module_route: .main.resources.add.app
        key: 0.0
        arguments:
          a: 0
          b: 11
        resources:
        - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/assertions/app.py
        assertions:
        - method: assertions.app.check_equals
          expected: 11
    assertions:
    - method: assertions.app.check_equals
      cast_output:
      - method: resources.app.list_sns_to_list_dict
      expected:
      - expected: 11
        id: ' .main.resources.add.app.add - 0.0 '
        id_short: .main.resources.add.app.add
        log: null
        method: check_equals
        output: 11
        passed: true
- function: run_test_handler
  description: Handles running tests of various kinds
  cast_arguments:
  - method: resources.app.list_dict_to_list_sns
    field: tests
  tests:
  - description: Tests is undefined
    arguments:
      tests: null
    assertions:
    - method: assertions.app.check_sns
      expected:
        tests: []
  - description: Tests is defined
    arguments:
      tests:
      - resources:
        - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/assertions/app.py
        module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/add.py
        function: add
        description: Return the result of adding two integers
        arguments:
          a: 1
          b: 1
        assertions:
        - method: assertions.app.check_equals
          expected: 2
        yaml: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/add_test.yaml
        project_path: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/add.py
        module_route: app.add.app
        key: 0.0
    assertions:
    - method: assertions.app.check_sns
      cast_output:
      - method: resources.app.list_sns_to_list_dict
        field: tests
      expected:
        tests:
        - expected: 2
          id: ' app.add.app.add - 0.0 - Return the result of adding two integers '
          id_short: app.add.app.add
          log: null
          method: check_equals
          output: 2
          passed: true
- function: run_tests
  description: >
    Performs a number of operations to process content or tests defined in
    YAML files provided the locations of a YAML, module, and resource files
  cast_arguments:
  - method: resources.app.list_dict_to_list_sns
    field: locations
  tests:
  - description: Locations is an empty dictionary
    arguments:
      locations: []
    assertions:
    - method: assertions.app.check_sns
      field: log
      expected:
        message: No tests collected
        level: warning
        standard_output: true
  - description: Location of files associated with an "add" module
    arguments:
      locations:
      - module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/add.py
        module_route: add.app.app
        yaml: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/add_test.yaml
        resources:
        - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/assertions/app.py
        - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/add/resources_folder_name/app.py
        project_path: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/app/resources/add/resources_folder_name/app.py
    assertions:
    - method: assertions.app.check_sns
      cast_output:
      - field: tests
        method: resources.app.list_sns_to_list_dict
      expected:
        tests:
        - expected: TypeError
          id: ' add.app.app.add - 0.1 - Return the result of adding two integers '
          id_short: add.app.app.add
          log: null
          method: check_exception
          output: TypeError
          passed: true
        - expected: 3
          id: ' add.app.app.add - 0.0 - Return the result of adding two integers '
          id_short: add.app.app.add
          log: null
          method: check_equals
          output: 3
          passed: true
