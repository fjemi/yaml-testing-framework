configurations:
  exclude_functions:
  - run_pytest
  resources:
  - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/invoke_testing_method/resources/app.py
  - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/invoke_testing_method/resources/resource.py
  - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/assertions/app.py


arguments:
  module_with_tests: &MODULE_WITH_TESTS_ARGUMENTS
    location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/invoke_testing_method/resources/module_with_tests.py
    exclude_files: []
    yaml_suffix: _test
    logging_enabled: True
  module_without_tests: &MODULE_WITHOUT_TESTS_ARGUMENTS
    location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/invoke_testing_method/resources/module_without_tests.py
    exclude_files: []
    yaml_suffix: _test
    logging_enabled: True


tests:
- function: set_default_values_for_arguments
  description: Sets defaults values for arguments
  tests:
  - description: Undefined arguments
    arguments:  {}
    assertions:
    - method: assertions.app.check_sns
      expected:
        exclude_files:
        - ignore
        - resource
        location: null
        method: plugin
        module: null
        module_filename: null
        resource_flag: false
        resource_suffix: _resource
        root_flag: false
        yaml_suffix: _test
        logging_enabled: true
  - description: Defined arguments
    arguments:
      location: location
      module: module
      module_filename: module_filename
      exclude_files: exclude_files
      yaml_suffix: yaml_suffix
      method: method
      resource_flag: resource_flag
      resource_suffix: resource_suffix
      root_flag: root_flag
      logging_enabled: logging_enabled
    assertions:
    - method: assertions.app.check_sns
      expected:
        exclude_files: exclude_files
        location: location
        method: method
        module: module
        module_filename: module_filename
        resource_flag: resource_flag
        resource_suffix: resource_suffix
        root_flag: root_flag
        yaml_suffix: yaml_suffix
        logging_enabled: logging_enabled
- function: get_parent_module_location
  description: Returns the parent module associated with a resource module
  tests:
  - description: Undefined arguments
    arguments:
      parent_filename: null
      resource_module: null
      resource_suffix: null
    assertions:
    - method: assertions.app.check_exception
      expected: TypeError
  - description: Undefined arguments
    arguments:
      parent_filename: null
      resource_module: directory/module_resource
      resource_suffix: _resource
    assertions:
    - method: assertions.app.check_equals
      expected: directory/module
  - description: Resource module and suffix are defined
    arguments:
      resource_module: directory/module_resource.py
      resource_suffix: _resource
    assertions:
    - method: assertions.app.check_equals
      expected: directory/module.py
  - description: Resource module and folder name are defined
    arguments:
      resource_module: directory/_resource/module.py
    assertions:
    - method: assertions.app.check_equals
      expected: directory/_resource/module.py
  - description: Resource module parent module filename are defined
    arguments:
      resource_module: directory/module_resource.py
      parent_filename: module
    assertions:
    - method: assertions.app.check_equals
      expected: directory/module.py
  - description: All arguments are defined
    arguments:
      resource_module: directory/_resource/module_resource.py
      parent_filename: app
      resource_suffix: _resource
    assertions:
    - method: assertions.app.check_equals
      expected: directory/_resource/app.py
- function: set_location
  description: Set the location of a file or directory of files to test
  tests:
  - description: Undefined arguments
    arguments: {}
    assertions:
    - method: assertions.app.check_sns
      expected:
        location: null
        module: null
        root_flag: null
        resource_flag: null
  - description: Location is defined
    arguments:
      location: location
    assertions:
    - method: assertions.app.check_sns
      expected:
        location: location
        module: null
        root_flag: null
        resource_flag: null
  - description: Root flag is true
    arguments:
      root_flag: true
    assertions:
    - method: assertions.app.check_sns
      expected:
        location: .
        module: null
        root_flag: null
        resource_flag: null
  - description: >
      Resource flag is false, module is defined, and location is undefined
    arguments:
      module: module
      resource_flag: false
      root_flag: false
      location: null
    assertions:
    - method: assertions.app.check_sns
      expected:
        location: module
        module: null
        root_flag: null
        resource_flag: null
  - description: Resource flag is true and associated fields are defined
    arguments:
      resource_flag: true
      module: _resource/module_resource.py
      resource_suffix: _resource
    assertions:
    - method: assertions.app.check_sns
      expected:
        location: _resource/module.py
        module: null
        root_flag: null
        resource_flag: null
- function: invoke_plugin
  description: Run tests by invoking the PYTEST YAML app
  tests:
  - description: Location is a module with defined tests
    arguments:
      << : *MODULE_WITH_TESTS_ARGUMENTS
    assertions:
    - method: assertions.app.check_length
      field: result
      expected: 2
    - method: assertions.app.check_sns
      cast_output:
      - field: result
        method: resources.resource.list_sns_to_list_dict
        # method: resources.app.list_sns_to_list_dict
      expected: &MODULE_WITH_TESTS_ASSERTION_EXPECTED
        result:
        - expected: Hello Earth
          id: ' .main.utils.invoke_testing_method.resources.module_with_tests.hello_world - 0.1 - Returns
            a greeting '
          id_short: .main.utils.invoke_testing_method.resources.module_with_tests.hello_world
          log: null
          method: check_equals
          module: null
          output: Hello Earth
          passed: true
        - expected: Hello World
          id: ' .main.utils.invoke_testing_method.resources.module_with_tests.hello_world - 0.0 - Returns
            a greeting '
          id_short: .main.utils.invoke_testing_method.resources.module_with_tests.hello_world
          log: null
          method: check_equals
          module: null
          output: Hello World
          passed: true
  - description: Location is a module with no defined tests
    arguments:
      <<: *MODULE_WITHOUT_TESTS_ARGUMENTS
    assertions:
    - method: assertions.app.check_sns
      expected:
        result: []
- function: invoke_pytest
  description: Run tests by invoking pytest
  tests:
  - description: Location is a module with defined tests
    arguments:
      <<: *MODULE_WITH_TESTS_ARGUMENTS
    assertions:
    - method: assertions.app.check_type
      expected: SimpleNamespace
    - method: assertions.app.check_equals
      field: process.returncode
      expected: 0
- function: run_tests_using_invocation_method
  description: Runs tests using one of the defined invocation methods
  cast_output:
  - field: result
    method: resources.resource.list_sns_to_list_dict
    # method: resources.app.list_sns_to_list_dict
  tests:
  - description: Run tests by invoking plugin
    arguments:
      <<: *MODULE_WITH_TESTS_ARGUMENTS
      method: plugin
    assertions:
    - method: assertions.app.check_sns
      expected:
        result:
        - expected: Hello Earth
          id: ' .main.utils.invoke_testing_method.resources.module_with_tests.hello_world - 0.1 - Returns
            a greeting '
          id_short: .main.utils.invoke_testing_method.resources.module_with_tests.hello_world
          log: null
          method: check_equals
          module: null
          output: Hello Earth
          passed: true
        - expected: Hello World
          id: ' .main.utils.invoke_testing_method.resources.module_with_tests.hello_world - 0.0 - Returns
            a greeting '
          id_short: .main.utils.invoke_testing_method.resources.module_with_tests.hello_world
          log: null
          method: check_equals
          module: null
          output: Hello World
          passed: true
- function: main
  description: >
    Handles running tests for a specific module or modules within a directory
    using the plugin or pytest
  test:
  - description: Run tests for module using pytest invocation method
    arguments:
      <<: *MODULE_WITH_TESTS_ARGUMENTS
      method: pytest
    assertions:
    - method: assertions.app.check_type
      expected: SimpleNamespace
  - description: Run tests on modules in a directory using plugin invocation method
    arguments:
      location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/invoke_testing_method/resources
      method: plugin
      yaml_suffix: _test
      logging_enabled: True
    cast_output:
    - field: result
      method: resources.app.list_sns_to_list_dict
    assertions:
    - method: assertions.app.check_sns
      expected:
        result:
        - expected: Hello World
          id: ' .main.utils.invoke_testing_method.resources.module_with_tests.hello_world
            - 0.0 - Returns a greeting '
          id_short: .main.utils.invoke_testing_method.resources.module_with_tests.hello_world
          method: check_equals
          module: null
          output: Hello World
          passed: true
        - expected: Hello Earth
          id: ' .main.utils.invoke_testing_method.resources.module_with_tests.hello_world
            - 0.1 - Returns a greeting '
          id_short: .main.utils.invoke_testing_method.resources.module_with_tests.hello_world
          method: check_equals
          module: null
          output: Hello Earth
          passed: true
