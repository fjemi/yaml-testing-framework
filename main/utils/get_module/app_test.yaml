resources:
- https://stackoverflow.com/questions/19009932/import-arbitrary-python-source-file-python-3-3


configurations:
  resources:
  - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/get_module/resource.py
  - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/checks/app.py


tests:
- function: format_module_name
  description: >
    Returns the name of the module. Creates the name for the module's location
    if the name doesn't exist
  tests:
  - description: Location is defined
    arguments:
      location: /main/utils/get_module/resource.py
      name: null
    checks:
    - method: checks.app.check_sns
      expected:
        name: .main.utils.get_module.resource
  - description: Name is defined
    arguments:
      name: name
      location: null
    checks:
    - method: checks.app.check_sns
      expected:
        name: name
  # # TODO: Need setup/teardown to finish test
  # - description: Name is the location to a file
  #   arguments:
  #     name: location to temp file
  #     location: null
  #   checks:
  #   - method: checks.app.check_sns
  #     expected:
  #       name: name
  - description: Name and location are undefined
    arguments:
      name: null
      location: null
    checks:
    - method: checks.app.check_sns
      expected:
        name: app
  - description: Name and location are undefined. Pool is true.
    arguments:
      name: null
      location: null
    checks:
    - method: checks.app.check_sns
      expected:
        name: app
- function: get_module_from_location
  description: Get the module at a given file path
  tests:
  - description: Location doesn't exist
    arguments:
      location: DOES_NOT_EXIST/app.py
      name: name
    checks:
    - method: checks.app.check_equals
      field: __dict__
      expected:  {}
  - description: Location exists
    arguments:
      name: name
      location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/get_module/resource.py
    checks:
    - method: checks.app.check_module
      field: module
      expected:
        location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/get_module/resource.py
  - description: Location is defined
    arguments:
      name: app
      location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/get_module/resource.py
    checks:
    - method: checks.app.check_module
      field: module
      expected:
        location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/get_module/resource.py
- function: get_module_from_pool
  tests:
  - description: Returns a new instance of the module
    arguments:
      pool: false
      location: location
    checks:
    - method: checks.app.check_sns
      expected:
        module: null
  - description: Returns a module in the pool
    arguments:
      location: location
      pool: True
    patches:
    - method: value
      route: POOL
      value:
        location: module_from_pool
    checks:
    - method: checks.app.check_sns
      expected:
        module: module_from_pool
- function: add_module_to_pool
  description: Adds the module and module location as to the pool as key/value pair
  tests:
  - description: Add defined location and module to pool
    arguments:
      location: location
      module: module
      pool: false
    checks:
    - method: checks.app.check_sns
      expected: {}
  - description: Do not add module to pool
    arguments:
      location: location
      module: module
      pool: true
    checks:
    - method: checks.app.check_sns
      expected: {}
- function: main
  description: Orchestrates execution of functions within the module
  tests:
  - description: Get module at location
    arguments:
      pool: false
      location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/get_module/resource.py
      name: app
    checks:
    - method: checks.app.check_module
      expected:
        location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/get_module/resource.py
  - description: Get module from pool
    patches:
    - route: POOL
      method: value
      value:
        location: module
    arguments:
      pool: true
      location: location
    checks:
    - method: checks.app.check_equals
      expected: module
