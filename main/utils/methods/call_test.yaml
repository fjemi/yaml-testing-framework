TODO:
- Add test for decorated function and awaitable to ./main/app_test.yaml
- Finalize logging and tests
- Think of moving format_exception_and_trace to logger
- Finish test for the main function. May require a spy.
- Add flag for silent logging in cases where an exception is the expected output


resource:
- https://stackoverflow.com/questions/5218895/python-nested-functions-variable-scoping


configurations:
  resources:
  - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/checks/app.py
  - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/methods/resource.py


tests:
- function: is_coroutine
  description: Returns True if an object is a coroutine and False otherwise
  cast_arguments:
  - method: resource.get_method
    field: object
  tests:
  - description: Object is undefined
    arguments:
      object: null
    checks:
    - method: checks.app.check_equals
      expected: False
  - description: Object is callable
    arguments:
      object: callable_function
    checks:
    - method: checks.app.check_equals
      expected: False
  - description: Object is awaitable
    arguments:
      object: awaitable_function
    checks:
    - method: checks.app.check_equals
      expected: True
- function: get_task_from_event_loop
  description: Returns the output of an awaitable or callable function
  cast_arguments:
  - method: resource.get_task
    field: task
  tests:
  - description: Task is undefined
    arguments:
      task: null
    checks:
    - method: checks.app.check_equals
      expected: null
  - description: Task is callable output
    arguments:
      task: callable_function
    checks:
    - method: checks.app.check_equals
      expected: callable_output
  - description: Task is awaitable output
    arguments:
      task: awaitable_function
    checks:
    - method: checks.app.check_equals
      expected: awaitable_output
- function: do_nothing
  description: Does nothing
  tests:
  - arguments: {}
    checks:
    - method: checks.app.check_equals
      expected: null
  - arguments:
      field: value
    checks:
    - method: checks.app.check_equals
      expected: null
- function: unpack_mapping
  description: Returns output from passing an unpacked mapping to a method
  cast_arguments:
  - field: method
    method: resource.get_method
  tests:
  - description: Argument is a mapping
    arguments:
      arguments:
        a: 0
        b: 0
      method: add
    checks:
    - method: checks.app.check_sns
      expected:
        output: 0
        exception: null
  - description: Argument is a list
    arguments:
      arguments: [0, 0]
      method: add
    checks:
    - method: checks.app.check_exception
      field: output
      expected: TypeError
    - method: checks.app.check_exception
      field: exception
      expected: TypeError
- function: unpack_list
  description: Returns output from passing an unpacked list or tuple to a method
  cast_arguments:
  - field: method
    method: resource.get_method
  tests:
  - description: Argument is a list
    arguments:
      arguments:
      - 0
      - 0
      method: add
    checks:
    - method: checks.app.check_sns
      expected:
        output: 0
        exception: null
  - description: Argument is a mapping
    arguments:
      arguments:
        a: 0
        b: 0
      method: add
    checks:
    - method: checks.app.check_sns
      expected:
        output: ab
        exception: null
  - description: Argument has too many values
    arguments:
      arguments:
        a: 0
        b: 0
        c: 0
      method: add
    checks:
    - method: checks.app.check_exception
      field: output
      expected: TypeError
    - method: checks.app.check_exception
      field: exception
      expected: TypeError
- function: pack_any
  description: Returns output from calling function with packed arguments
  cast_arguments:
  - field: method
    method: resource.get_method
  tests:
  - description: Argument is a mapping
    arguments:
      arguments:
        a: 0
        b: 0
      method: sum_
    checks:
    - method: checks.app.check_exception
      field: output
      expected: TypeError
    - method: checks.app.check_exception
      field: exception
      expected: TypeError
  - description: Argument is a list
    arguments:
      arguments:
      - 0
      - 0
      method: sum_
    checks:
    - method: checks.app.check_sns
      expected:
        output: 0
        exception: null
- function: get_handlers
  description:
  tests:
  - description: Arguments is not a mapping or list
    arguments:
      arguments: null
    checks:
    - method: checks.app.check_length
      expected: 1
    - method: checks.app.check_type
      expected: list
    - method: checks.app.check_equals
      cast_output:
      - method: resource.list_methods_to_list_strings
      expected:
      - pack_any
  - description: Arguments is a mapping
    arguments:
      arguments: {}
    checks:
    - method: checks.app.check_length
      expected: 2
    - method: checks.app.check_equals
      cast_output:
      - method: resource.list_methods_to_list_strings
      expected:
      - unpack_mapping
      - pack_any
  - description: Arguments is a list
    arguments:
      arguments: []
    checks:
    - method: checks.app.check_length
      expected: 2
    - method: checks.app.check_equals
      cast_output:
      - method: resource.list_methods_to_list_strings
      expected:
      - unpack_list
      - pack_any
- function: call_handlers
  description: >
    Returns the first result from the calling the method using a handler where
    the result does not produce an exception. If all handlers produce errors return the
    first error produced.
  cast_arguments:
  - method: resource.get_method
    field: method
  - method: resource.get_handlers
    field: handlers
  tests:
  - description: Handlers is empty list
    arguments:
      arguments: {}
      method: add
      handlers: []
    checks:
    - method: checks.app.check_exception
      expected: IndexError
  - description: Single handler
    arguments:
      arguments:
      - 1
      - 1
      method: sum_
      handlers:
      - pack_any
    checks:
    - method: checks.app.check_sns
      expected:
        output: 2
        exception: null
  - description: Mapping and any handlers
    arguments:
      arguments:
        a: 1
        b: 1
      method: add
      handlers:
      - unpack_mapping
      - pack_any
    checks:
    - method: checks.app.check_sns
      expected:
        output: 2
        exception: null
  - description: list and any handlers
    arguments:
      arguments: 1
      method: sum_
      handlers:
      - unpack_list
      - pack_any
    checks:
    - method: checks.app.check_exception
      field: output
      expected: TypeError
  - description: list and any handlers
    arguments:
      arguments:
      - 1
      - 1
      method: sum_
      handlers:
      - unpack_list
      - pack_any
    checks:
    - method: checks.app.check_sns
      expected:
        output: 2
        exception: null
- function: wrapper
  description: Decorator that handles exceptions and formats output from "call" handlers
  cast_arguments:
  - field: method
    method: resource.get_method
  tests:
  - description:
    arguments:
      method: greetings
    checks:
    - method: checks.app.check_equals
      field: __wrapped__.__name__
      expected: greetings
    - method: checks.app.check_sns
      cast_output:
      - method: resource.call_output
      expected:
        output: Hello World
        exception: null
