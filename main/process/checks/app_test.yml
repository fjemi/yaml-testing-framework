configurations:
  resources:
  - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/checks/app.py
  - ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/resource.py


tests:
- function: main
  description: >
    Performs a number of operations to process an check and verify that the
    output from a function is as expected
  cast_arguments:
  - method: resource.wrapper_get_module
    field: module
  cast_output:
  - method: resource.list_sns_to_list_dict
    field: checks
  tests:
  - description: Undefined arguments
    arguments:
      module: null
      output: null
      checks: null
      id: null
      id_short: null
    checks:
    - method: checks.app.check_sns
      expected:
        checks: []
        _cleanup:
        - module
        - output
    - method: checks.app.check_sns
      field: log
      expected:
        level: warning
        message: Processed 0 checks for None
  - description: Single check that passes
    arguments:
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/resource.py
      output: output
      checks:
      - method: check_equals
        expected: output
      id: id
      id_short: id_short
    checks:
    - method: checks.app.check_sns
      expected:
        _cleanup:
        - module
        - output
        checks:
        - expected: output
          id: id
          id_short: id_short
          method: check_equals
          output: output
          passed: true
          log: null
    - method: checks.app.check_sns
      field: log
      expected:
        message: Processed 1 check for id_short
        level: info
    - method: checks.app.check_equals
      field: checks
      expected:
      - expected: output
        method: check_equals
        output: output
        passed: true
        id: id
        id_short: id_short
        log: null
  - description: Two checks. One passes and one fails
    arguments:
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/resource.py
      output:
        key: output_value
      checks:
      - method: check_equals
        expected:
          key: output_value
      - method: check_equals
        expected:
          key: expected_value
      id: id
      id_short: id_short
    checks:
    - method: checks.app.check_sns
      expected:
        _cleanup:
        - module
        - output
    - method: checks.app.check_sns
      field: log
      expected:
        message: Processed 2 checks for id_short
        level: info
    - method: checks.app.check_equals
      field: checks
      expected:
      - expected:
          key: output_value
        method: check_equals
        output:
          key: output_value
        passed: true
        id: id
        id_short: id_short
        log: null
      - expected: 'key: expected_value'
        id: id
        id_short: id_short
        log: '[]'
        method: check_equals
        output: 'key: output_value'
        passed: false
  - description: Assertion method does not exist
    arguments:
      module:  ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/resource.py
      output: output
      checks:
      - method: pass_through_inner
        expected: output
      id: id
      id_short: id_short
    checks:
    - method: checks.app.check_sns
      expected:
        _cleanup:
        - module
        - output
    - method: checks.app.check_sns
      field: log
      expected:
        level: info
        message: Processed 1 check for id_short
    - method: checks.app.check_equals
      field: checks
      expected:
      - expected: 'null

          ...'
        method: pass_through_inner
        output: 'Assertion method pass_through_inner does not exist
      
          ...'
        passed: false
        log: '[]'
        id: id
        id_short: id_short
- function: pre_processing
  description: >
    Formats check data before processing. Returns a single Assertion
    model.
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: checks.app.check_sns
      expected:
        cast_output: null
        expected: null
        field: null
        id: null
        id_short: null
        method: null
        module: null
        output: null
        passed: false
  - description: Assertion is empty dict and other arguments are defined
    arguments:
      check: {}
      output: output
      module: module
      id: id
      id_short: id_short
    checks:
    - method: checks.app.check_sns
      expected:
        cast_output: null
        expected: null
        field: null
        id: id
        id_short: id_short
        method: null
        module: module
        output: output
        passed: false
  - description: Assertions defined and other arguments are undefined
    arguments:
      check:
        cast_output: cast_output
        expected: expected
        field: field
        method: method
      output: null
      module: null
      id: null
      id_short: null
    checks:
    - method: checks.app.check_sns
      expected:
        cast_output: cast_output
        expected: expected
        field: field
        id: null
        id_short: null
        method: method
        output: null
        passed: false
- function: pass_through
  description: >
    Returns the method to use if an check method does not exist. Returns data needed to
    fail an check.
  tests:
  - description: Method is undefined
    arguments: {}
    checks:
    - method: checks.app.check_function
      expected:
        location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/app.py
        name: pass_through_inner
    - method: checks.app.check_function_output
      expected:
        arguments:
        - expected: expected
          output: output
        output:
        - output: Assertion method None does not exist
          expected: ''
          passed: false
        cast_output:
        - method: sns_to_dict
        module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/resource.py
  - description: Method is defined
    arguments:
      method: check_method_does_not_exist
    checks:
    - method: checks.app.check_function
      expected:
        name: pass_through_inner
        location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/app.py
    - method: checks.app.check_function_output
      expected:
        arguments:
        - expected: expected
          output: output
        output:
        - output: Assertion method check_method_does_not_exist does not exist
          expected: ''
          passed: false
        cast_output:
        - method: sns_to_dict
        module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/resource.py
- function: get_check_method
  description: >
    Returns an check method defined in a resource module, given the route
    to the method
  cast_arguments:
  - method: resource.wrapper_get_module
    field: module
  tests:
  - description: UMethod undefined
    arguments:
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/resource.py
      method: null
    checks:
    - method: checks.app.check_sns
      field: log
      expected:
        level: error
        message: Assertion method None does not exist in module ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/resource.py
  - description: Assertion method exists
    arguments:
      method: check_method_a
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/resource.py
    checks:
    - method: checks.app.check_type
      expected: SimpleNamespace
    - method: checks.app.check_function
      field: method
      expected:
        name: check_method_a
        location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/resource.py
  - description: Assertion method does not exist
    arguments:
      method: check_method_b
      module: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/resource.py
    checks:
    - method: checks.app.check_sns
      field: log
      expected:
        level: error
        message: Assertion method check_method_b does not exist in module ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/resource.py
    - method: checks.app.check_function
      field: method
      expected:
        name: pass_through_inner
        location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/checks/app.py
- function: reset_output_value
  description: >
    Sets output to one of its fields, keys, or attributes; given the
    dot-delimited route to the field
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: checks.app.check_sns
      expected:
        output: null
  - description: Output is a string and field is undefined
    arguments:
      output: output
      field: null
    checks:
    - method: checks.app.check_sns
      expected:
        output: output
  - description: Output is a dict and field is a key in the dict
    arguments:
      output:
        key: value
      field: key
    checks:
    - method: checks.app.check_sns
      expected:
        output: value
  - description: Output is a dict and field is route to nested key
    arguments:
      output:
        key_a:
          key_b: value
      field: key_a.key_b
    checks:
    - method: checks.app.check_sns
      expected:
        output: value
  - description: Output is a dict and field is route to non-existing key
    arguments:
      output:
        key: value
      field: key_does_not_exist
    checks:
    - method: checks.app.check_sns
      expected:
        output: null
    - method: checks.app.check_sns
      field: log
      expected:
        message: Field key_does_not_exist does not exist in object of type NoneType
        level: warning
  - description: Output is a SimpleNamespace and field is route to an attribute
    cast_arguments:
    - method: resource.reset_output_value_cast_arguments
      field: output
    arguments:
      output:
        attribute: value
      field: attribute
    checks:
    - method: checks.app.check_sns
      expected:
        output: value
- function: get_check_result
  description: >
    Returns the result (passed, expected, output) of calling the check
    method
  cast_arguments:
  - method: resource.method_resource
    field: method
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: checks.app.check_exception
      expected: TypeError
  - description: Assertion fails when expected and output are different values
    arguments:
      expected: expected
      output: output
      method: check_equals
    checks:
    - method: checks.app.check_sns
      expected:
        method: check_equals
        expected: expected
        output: output
        passed: false
  - description: Assertion passes when expected and output are the same value
    arguments:
      expected: output
      output: output
      method: check_equals
    checks:
    - method: checks.app.check_sns
      expected:
        method: check_equals
        expected: output
        output: output
        passed: true
  - description: Assertion fails and expected and output are converted to YAML
    arguments:
      expected:
        expected_key:
        - expected_value
      output:
        output_key:
        - output_value
      method: check_equals
    checks:
    - method: checks.app.check_sns
      expected:
        method: check_equals
        passed: False
        expected:
          expected_key:
          - expected_value
        output:
          output_key:
          - output_value
- function: convert_to_yaml
  description: Converts a field object to YAML
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: checks.app.check_sns
      expected:
        field: null
        object: 'null

          ...'
  - description: Object is a string
    arguments:
      object: object
      field: field
    checks:
    - method: checks.app.check_sns
      expected:
        object: 'object

          ...'
  - description: Object is a dict
    arguments:
      object:
        key: value
      field: field
    checks:
    - method: checks.app.check_sns
      expected:
        object: 'key: value'
  - description: Object is a list
    arguments:
      object: [item_0, item_1, item_2]
      field: field
    checks:
    - method: checks.app.check_sns
      expected:
        object: '- item_0
        
          - item_1
        
          - item_2'
  - description: Conversion fails
    arguments:
      object: >
        a: b
          c:
      field: field
    checks:
    - method: checks.app.check_sns
      expected:
        object: "a: b\n  c:\n"
    - method: checks.app.check_sns
      field: log
      expected:
        message: ScannerError occurred trying to convert field to YAML
        level: error
- function: handle_failed_check
  description: >
    Converts expected and output values to YAML if the check
    method fails
  tests:
  - description: Passed is false and expected/output values are list
    arguments:
      expected:
      - a
      - b
      - c
      output:
      - a
      - b
      - c
      passed: false
    checks:
    - method: checks.app.check_sns
      expected:
        log: '[]'
        expected: '- a

          - b

          - c'
        output: '- a

          - b

          - c'
  - description: Passed is false expected/output values are dicts
    arguments:
      passed: false
      expected:
        key: value
      output:
        key: value
    checks:
    - method: checks.app.check_sns
      expected:
        log: '[]'
        expected: 'key: value'
        output: 'key: value'
  - description: Passed is failed and expected/output are strings
    arguments:
      passed: false
      expected: 'key: value'
      output: 'key: value'
    checks:
    - method: checks.app.check_sns
      expected:
        log: '[]'
        expected: 'key: value'
        output: 'key: value'
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: checks.app.check_sns
      expected:
        output: 'null
        
          ...'
        expected: 'null
        
          ...'
  - description: Passed it true
    arguments:
      passed: true
      output: output
      expected: expected
    checks:
    - method: checks.app.check_sns
      expected: {}
  - description: Passed it false
    arguments:
      passed: false
      output: >
        key: value
      expected: >
        key: value
    checks:
    - method: checks.app.check_sns
      expected:
        output: "key: value"
        expected: "key: value"
