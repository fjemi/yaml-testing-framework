todo:
- TODO: add module route to function/method name after processing, module.function
- TODO: add field key to assertions


globals:
  resources:
  - ${ROOT_DIR}/assertions/app.py


tests:
- function: pass_through
  description: >
    Method to use if an assertion method does not exist. Returns data needed to
    fail an assertion.
  tests:
  - description: Undefined argument
    arguments: {}
    assertions:
    - method: assertions.app.assert_equals
      expected:
        output: assertion method None doesn't exist
        expected: ''
        passed: false
  - description: Defined argument
    arguments:
      output: assertion_method_does_not_exist
    assertions:
    - method: assertions.app.assert_equals
      expected:
        output: assertion method assertion_method_does_not_exist doesn't exist
        expected: ''
        passed: false
  - description: Defined argument
    arguments:
      output: output
    assertions:
    - method: assertions.app.assert_equals
      expected:
        output: assertion method output doesn't exist
        expected: ''
        passed: false
- function: get_current_assertion
  description: >
    Retrieves assertion data for the current iteration and casts it as an
    Assertion object
  tests:
  - arguments: {}
    assertions:
    - method: assertions.app.assert_equals
      expected: null
  - arguments:
      i: 0
      assertions:
      - {}
      output: output
    assertions:
    - method: assertions.app.assert_equals
      field: i
      expected: 0
    - method: assertions.app.assert_equals
      field: assertion.output
      expected: output
  - arguments:
      i: 1
      assertions:
      - {}
      - expected: expected
        method: method
      output: output
    assertions:
    - method: assertions.app.assert_equals
      field: i
      expected: 1
    - method: assertions.app.assert_equals
      field: assertion.output
      expected: output
    - method: assertions.app.assert_equals
      field: assertion.expected
      expected: expected
    - method: assertions.app.assert_equals
      field: assertion.method
      expected: method
- function: get_assertion_method
  description: >
    Gets the method used to verufy that the output is as expected
  cast_arguments:
  - caster: test_resources.app.module_resource
    field: module
  - caster: CONFIG.schema.Assertion
    field: assertion
  tests:
  - description: Undefined argument
    arguments:
      module: null
      assertion: null
    assertions:
    - method: assertions.app.assert_type
      field: assertion
      expected: Assertion
    - method: assertions.app.assert_equals
      field: assertion.method.__name__
      expected: pass_through
  - description: Defined arguments
    arguments:
      assertion:
        method: pass_through
        expected: expected
        output: output
      module: assertions
    assertions:
    - method: assertions.app.assert_type
      field: assertion.method
      expected: function
    - method: assertions.app.assert_equals
      field: assertion.method.__name__
      expected: pass_through
- function: verify_expected_output
  description: >
    Calls an method with output and expected output to verify the assertion.
    Sets fields of the assertions with the key/value pairs of the result from
    method call.
  cast_arguments:
  - caster: CONFIG.schema.Assertion
    field: assertion
  - caster: test_resources.app.verify_expected_output_resource
    field: assertion
  tests:
  - description: Undefined arguments
    arguments:
      assertion: {}
    assertions:
    - method: assertions.app.assert_equals
      expected: null
  - arguments:
      assertion:
        expected: expected
        output: output
        method: assert_equals
        method_name: assert_equals
    cast_output:
    - caster: dc.asdict
      field: assertion
    assertions:
    - method: assertions.app.assert_equals
      expected:
        assertion:
          cast_output: null
          exception: null
          expected: expected
          field: null
          method: assert_equals
          method_name: assert_equals
          output: output
          passed: false
  - arguments:
      assertion:
        expected: expected
        output: output
        method: assert_equals
        method_name: assert_equals
    assertions:
    - method: assertions.app.assert_type
      expected: Assertion
      field: assertion
- function: update_assertions_and_increment_i
  description: >
    Updates the assertion for the current iteration in the list of assertions
    and increments sh`i` to move to the next iteration
  tests:
  - description: Undefined arguments
    arguments: {}
    assertions:
    - method: assertions.app.assert_equals
      expected: null
  - description: Defined arguments
    arguments:
      i: 0
      assertion: processed_assertion
      assertions:
      - assertion_0
      - assertion_1
    assertions:
    - method: assertions.app.assert_equals
      expected:
        i: 1
        assertions:
        - processed_assertion
        - assertion_1
  - description: Defined arguments
    arguments:
      i: 1
      assertion: processed_assertion
      assertions:
      - assertion_0
      - assertion_1
    assertions:
    - method: assertions.app.assert_equals
      expected:
        i: 2
        assertions:
        - assertion_0
        - processed_assertion
- function: get_assertion_output_field
  description: >
    Sets the output of the assertion of a dot-delimited field/key of
    an object/dictionary.
  cast_arguments:
  - caster: CONFIG.schema.Assertion
    field: assertion
  cast_output:
  - caster: dc.asdict
    field: assertion
  tests:
  - arguments:
      assertion: {}
    assertions:
    - method: assertions.app.assert_equals
      expected:
        assertion:
          cast_output: null
          exception: null
          expected: null
          field: null
          method: null
          method_name: null
          output: null
          passed: null
  - arguments:
      assertion:
        output: output
        field: null
    assertions:
    - method: assertions.app.assert_equals
      expected:
        assertion:
          cast_output: null
          exception: null
          expected: null
          field: null
          method: null
          method_name: null
          output: output
          passed: null
  - arguments:
      assertion:
        output:
          key: value
        field: key
    assertions:
    - method: assertions.app.assert_equals
      expected:
        assertion:
          cast_output: null
          exception: null
          expected: null
          field: key
          method: null
          method_name: null
          output: value
          passed: null
  - arguments:
      assertion:
        output:
          key_a:
            key_b: value
        field: key_a.key_b
    assertions:
    - method: assertions.app.assert_equals
      expected:
        assertion:
          cast_output: null
          exception: null
          expected: null
          field: key_a.key_b
          method: null
          method_name: null
          output: value
          passed: null
- function: get_casted_assertion_output
  description: >
    Casts the output of an assertion to a constructor before verifying
    the a function's output
  cast_arguments:
  - caster: CONFIG.schema.Assertion
    field: assertion
  - caster: test_resources.app.module_resource
    field: module
  tests:
  - arguments:
      assertion:
        output: output
        cast_output: []
      module: assertions
    assertions:
    - method: assertions.app.assert_equals
      field: assertion.output
      expected: output
  - arguments:
      assertion:
        output: 1234
        cast_output:
        - caster: __builtins__.str
      module: assertions
    assertions:
    - method: assertions.app.assert_equals
      field: assertion.output
      expected: '1234'
  - arguments:
      assertion:
        output: '00000'
        cast_output:
        - caster: __builtins__.int
      module: assertions
    assertions:
    - method: assertions.app.assert_equals
      field: assertion.output
      expected: 0
- function: main
  description: >
    Processes assertions by:
    - Retrieving assertion methods or functions from resources defined for the
      test
    - Drilling into a function's output to get an attribute, field, or key
    - Casting a function's output if needed
    - Verifying that a function's output is as expected
  cast_arguments:
  - caster: test_resources.app.module_resource
    field: module
  cast_output:
  - caster: test_resources.app.main_cast_output
    field: assertions
  tests:
  - arguments:
      module: null
      output: null
      assertions: null
    assertions:
    - method: assertions.app.assert_equals
      expected:
        assertions: []
  - arguments:
      module: assertions
      output: output
      assertions:
      - method: assert_equals
        expected: output
    assertions:
    - method: assertions.app.assert_equals
      expected:
        assertions:
        - method: assert_equals
          method_name: assert_equals
          passed: true
          exception: null
          output: output
          expected: output
          field: null
          cast_output: []
  - arguments:
      module: assertions
      exception:
        name: RuntimeError
      assertions:
      - method: assert_exception
        expected: RuntimeError
    assertions:
    - method: assertions.app.assert_equals
      expected:
        assertions:
        - method: assert_exception
          method_name: assert_exception
          passed: true
          exception:
            name: RuntimeError
          output: RuntimeError
          expected: RuntimeError
          field: null
          cast_output: []
  - arguments:
      module: assertions
      output: output
      assertions:
      - method: assertion_method_does_not_exist
        expected: output
    assertions:
    - method: assertions.app.assert_equals
      expected:
        assertions:
        - method: assertion_method_does_not_exist
          method_name: assertion_method_does_not_exist
          passed: false
          exception: null
          output: assertion method assertion_method_does_not_exist doesn't exist
          expected: ''
          field: null
          cast_output: []
